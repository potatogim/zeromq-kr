[[div class="code"]]
[[span style="color:#008000"]]**while**[[/span]] ([[span style="color:#666666"]]1[[/span]]) {
{{@@    @@}}[[span style="color:#408080"]]//@@//@@{{@@  @@}}Read and save all frames until we get an empty frame//[[/span]]
{{@@    @@}}[[span style="color:#408080"]]//@@//@@{{@@  @@}}In this example there is only 1 but it could be more//[[/span]]
{{@@    @@}}zmq_msg_t address;
{{@@    @@}}zmq_msg_init ([[span style="color:#666666"]]&[[/span]]address);
{{@@    @@}}zmq_recv (worker, [[span style="color:#666666"]]&[[/span]]address, [[span style="color:#666666"]]0[[/span]]);

{{@@    @@}}zmq_msg_t empty;
{{@@    @@}}zmq_msg_init ([[span style="color:#666666"]]&[[/span]]empty);
{{@@    @@}}zmq_recv (worker, [[span style="color:#666666"]]&[[/span]]empty, [[span style="color:#666666"]]0[[/span]]);

{{@@    @@}}[[span style="color:#408080"]]//@@//@@{{@@  @@}}Get request, send reply//[[/span]]
{{@@    @@}}zmq_msg_t payload;
{{@@    @@}}zmq_msg_init ([[span style="color:#666666"]]&[[/span]]payload);
{{@@    @@}}zmq_recv (worker, [[span style="color:#666666"]]&[[/span]]payload, [[span style="color:#666666"]]0[[/span]]);

{{@@    @@}}[[span style="color:#B00040"]]int[[/span]] char_nbr;
{{@@    @@}}printf ([[span style="color:#BA2121"]]"Worker: "[[/span]]);
{{@@    @@}}[[span style="color:#008000"]]**for**[[/span]] (char_nbr [[span style="color:#666666"]]=[[/span]] [[span style="color:#666666"]]0[[/span]]; char_nbr [[span style="color:#666666"]]<[[/span]] zmq_msg_size ([[span style="color:#666666"]]&[[/span]]payload); char_nbr[[span style="color:#666666"]]++[[/span]])
{{@@        @@}}printf ([[span style="color:#BA2121"]]"%c"[[/span]], [[span style="color:#666666"]]*[[/span]]([[span style="color:#B00040"]]char[[/span]] [[span style="color:#666666"]]*[[/span]]) (zmq_msg_data ([[span style="color:#666666"]]&[[/span]]payload) [[span style="color:#666666"]]+[[/span]] char_nbr));
{{@@    @@}}printf ([[span style="color:#BA2121"]]"[[/span]][[span style="color:#BB6622"]]**\n**[[/span]][[span style="color:#BA2121"]]"[[/span]]);

{{@@    @@}}zmq_msg_init_size ([[span style="color:#666666"]]&[[/span]]payload, [[span style="color:#666666"]]2[[/span]]);
{{@@    @@}}memcpy (zmq_msg_data ([[span style="color:#666666"]]&[[/span]]payload), [[span style="color:#BA2121"]]"OK"[[/span]], [[span style="color:#666666"]]2[[/span]]);

{{@@    @@}}zmq_send (worker, [[span style="color:#666666"]]&[[/span]]address, ZMQ_SNDMORE);
{{@@    @@}}zmq_close ([[span style="color:#666666"]]&[[/span]]address);
{{@@    @@}}zmq_send (worker, [[span style="color:#666666"]]&[[/span]]empty, ZMQ_SNDMORE);
{{@@    @@}}zmq_close ([[span style="color:#666666"]]&[[/span]]empty);
{{@@    @@}}zmq_send (worker, [[span style="color:#666666"]]&[[/span]]payload, [[span style="color:#666666"]]0[[/span]]);
{{@@    @@}}zmq_close ([[span style="color:#666666"]]&[[/span]]payload);
}
[[/div]]